"""add_new_tables

Revision ID: 669d91464db1
Revises: 362837b15fd7
Create Date: 2025-05-04 22:56:16.487927

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "669d91464db1"
down_revision: Union[str, None] = "362837b15fd7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "game",
        sa.Column("game_date", sa.Date(), nullable=False),
        sa.Column("opponent", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "home_away", sa.Enum("HOME", "AWAY", name="gamelocation"), nullable=False
        ),
        sa.Column("points_scored", sa.Integer(), nullable=False),
        sa.Column("points_conceded", sa.Integer(), nullable=False),
        sa.Column("season", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "player",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("position", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("jersey_number", sa.Integer(), nullable=False),
        sa.Column("height", sa.Float(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "gamestats",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column(
            "stats_type", sa.Enum("PLAYER", "GAME", name="statstype"), nullable=False
        ),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.Column("minutes_played", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("team_points", sa.Integer(), nullable=False),
        sa.Column("opponent_points", sa.Integer(), nullable=False),
        sa.Column("quarter_scores", postgresql.ARRAY(sa.Integer()), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("game_id"),
    )
    op.create_table(
        "playerstats",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column(
            "stats_type", sa.Enum("PLAYER", "GAME", name="statstype"), nullable=False
        ),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.Column("minutes_played", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("assists", sa.Integer(), nullable=False),
        sa.Column("rebounds", sa.Integer(), nullable=False),
        sa.Column("steals", sa.Integer(), nullable=False),
        sa.Column("blocks", sa.Integer(), nullable=False),
        sa.Column("field_goals_made", sa.Integer(), nullable=False),
        sa.Column("field_goals_attempted", sa.Integer(), nullable=False),
        sa.Column("three_points_made", sa.Integer(), nullable=False),
        sa.Column("three_points_attempted", sa.Integer(), nullable=False),
        sa.Column("free_throws_made", sa.Integer(), nullable=False),
        sa.Column("free_throws_attempted", sa.Integer(), nullable=False),
        sa.Column("turnovers", sa.Integer(), nullable=False),
        sa.Column("personal_fouls", sa.Integer(), nullable=False),
        sa.Column("plus_minus", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["player.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("player_id", "game_id"),
    )
    op.drop_table("task")
    op.drop_table("project")
    op.drop_table("user")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column(
            "user_id",
            sa.INTEGER(),
            server_default=sa.text("nextval('user_user_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("user_id", name="user_pkey"),
        sa.UniqueConstraint("email", name="user_email_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "task",
        sa.Column(
            "task_description",
            sa.VARCHAR(length=300),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("assignee", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("task_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("due_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("project", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["assignee"], ["user.user_id"], name="task_assignee_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["project"], ["project.project_id"], name="task_project_fkey"
        ),
        sa.PrimaryKeyConstraint("task_id", name="task_pkey"),
    )
    op.create_table(
        "project",
        sa.Column("project_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("project_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "project_description", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("project_id", name="project_pkey"),
    )
    op.drop_table("playerstats")
    op.drop_table("gamestats")
    op.drop_table("player")
    op.drop_table("game")
    # ### end Alembic commands ###
